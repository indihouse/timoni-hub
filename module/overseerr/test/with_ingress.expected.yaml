apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 0.0.0-devel
  name: overseerr
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/name: overseerr
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 0.0.0-devel
  name: overseerr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: overseerr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: overseerr
    spec:
      containers:
      - env:
        - name: TZ
          value: UTC
        image: sctx/overseerr:1.33.2@sha256:17b45f73fbfd15048aa9bbdb8af037f4b45139ffc49f56150834cbfe4cc2ac2f
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/v1/status/appdata
            port: http
        name: overseerr
        ports:
        - containerPort: 5055
          name: http
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/v1/status
            port: http
        volumeMounts:
        - mountPath: /app/config
          name: config
        resources:
          limits:
            ephemeral-storage: 100Mi
          requests:
            cpu: 100m
            ephemeral-storage: 100Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      volumes:
      - emptyDir: {}
        name: config
      securityContext:
        fsGroup: 65532
        runAsGroup: 65532
        runAsUser: 65532
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: overseerr
  namespace: default
  labels:
    app.kubernetes.io/name: overseerr
    app.kubernetes.io/version: 0.0.0-devel
spec:
  rules:
  - host: overseerr.test.com
    http:
      paths:
      - backend:
          service:
            name: overseerr
            port:
              name: http
        path: /
        pathType: Prefix
---
